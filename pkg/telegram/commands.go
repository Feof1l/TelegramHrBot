package telegram

import tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"

var UserAgreement = "https://telegram.org/tos/ru" // —Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
var startMessage = `–ü—Ä–∏–≤–µ—Ç! –Ø - HR –±–æ—Ç.–°–µ–π—á–∞—Å –∑–∞–¥–∞–º —Ç–µ–±–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤. –ï—Å–ª–∏ –≥–æ—Ç–æ–≤(–∞) –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—â–µ–Ω–∏–µ —Å–æ –º–Ω–æ–π, –∂–º–∏ "–î–∞".
–ï—Å–ª–∏ –≤—ã–±–µ—Ä–µ—à—å "–î–∞", —Å–æ–≥–ª–∞—à–∞–µ—à—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –æ–±—Ä–∞–±—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.–ü—Ä–æ–¥–æ–ª–∂–∏–º –¥–∏–∞–ª–æ–≥? `

// var banMessage = "–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞ @PMIIHrBot"
// var warningBanMessage = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏—Ö –±–æ—Ç–æ–≤"
var noQuestionMessage = `–•–æ—Ä–æ—à–æ, –ø–æ–Ω—è–ª –í–∞—Å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞,–ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π, —á—Ç–æ —è–≤—è–ª–µ—Ç—Å—è –ø—Ä–∏—á–∏–Ω–æ–π –≤–∞—à–µ–≥–æ –æ—Ç–∫–∞–∑–∞? –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –ø—Ä–∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–º –æ—Ç–±–æ—Ä–µ
–∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤.`
var startDialogMessage = `–û—Ç–ª–∏—á–Ω–æ!–Ø –æ—á–µ–Ω—å —Ä–∞–¥!–¢–æ–≥–¥–∞ –Ω–∞—á–Ω–µ–º –Ω–∞—à –¥–∏–∞–ª–æ–≥) `
var educationQuestion = `–ö–∞–∫–æ–µ —É —Ç–µ–±—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç?`
var choiseProfil = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞–º —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã`
var failTrueMessage = `–û–π, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–∞–Ω–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏, –∏ –º—ã —Å –Ω–µ —Å–º–æ–∂–µ–º —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å 
—Ç–≤–æ—é –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä—É üò¢. –ù–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è, —É –Ω–∞—Å –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –µ—Å—Ç—å –º–Ω–æ–≥–æ –¥—Ä—É–≥–∏—Ö –æ—Ç–ª–∏—á–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π,
–ë—É–¥–µ–º —Ä–∞–¥—ã, –µ—Å–ª–∏ —Ç—ã –Ω–∞–π–¥–µ—à—å —á—Ç–æ-—Ç–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ!`
var feedbackMessage = `–ó–Ω–∞–µ—à—å, –º–Ω–µ –±—ã–ª–æ –ø—Ä–∏—è—Ç–Ω–æ —Å —Ç–æ–±–æ–π –ø–æ–æ–±—â–∞—Ç—å—Å—è. –ü–æ—ç—Ç–æ–º—É —è —Å–æ—Ö—Ä–∞–Ω—é —Ç–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç –Ω–∞ 
—Å–ª—É—á–∞–π –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π –≤ –∫–æ–º–ø–∞–Ω–∏–∏.
–ù–∞–¥–µ—é—Å—å, –∏ —Ç–µ–±–µ –±—ã–ª–æ –ø–æ–ª–µ–∑–Ω–æ —Å–æ –º–Ω–æ–π –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å. –°–∫–∞–∂–∏, –∞ —á—Ç–æ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å–æ –º–Ω–æ–π?
–ù–∞–ø–∏—à–∏ –æ—Ç–≤–µ—Ç –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ`
var citizenshipMessage = `–°—É–ø–µ—Ä!–°–∫–∞–∂–∏, –∫–∞–∫–æ–µ —É —Ç–µ–±—è –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ?`
var citizenshipKeyBoard = tgbotapi.NewInlineKeyboardMarkup( // // inline –º–µ–Ω—é –¥–ª—è —Å–±–æ—Ä–µ –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–µ
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–†–§", "–†–§"),
		tgbotapi.NewInlineKeyboardButtonData("–†–ë", "–†–ë"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–°–ù–ì", "–°–ù–ì"),
		tgbotapi.NewInlineKeyboardButtonData("–î—Ä—É–≥–æ–µ", "–î—Ä—É–≥–æ–µ"),
	),
)
var choiseProfilKeyBoard = tgbotapi.NewInlineKeyboardMarkup( // // inline –º–µ–Ω—é –¥–ª—è —Å–±–æ—Ä–µ –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("Go-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "Golang backend - developer"),
		tgbotapi.NewInlineKeyboardButtonData("Java-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "jun java dev"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "middle js dev"),
		tgbotapi.NewInlineKeyboardButtonData("–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç DS", "middle data science"),
	),
)
var choisePosition = `–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –Ω–∞—Å –æ—Ç–∫—Ä—ã—Ç –Ω–∞–±–æ—Ä –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏:`

var choisePositionKeyBoard = tgbotapi.NewInlineKeyboardMarkup( // // inline –º–µ–Ω—é –¥–ª—è —Å–±–æ—Ä–µ –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–°—Ç–∞–∂—ë—Ä", "Intern"),
		tgbotapi.NewInlineKeyboardButtonData("Junior", "Junior"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("Middle", "Middle"),
		tgbotapi.NewInlineKeyboardButtonData("Senior", "Senior"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("Team Lead", "Team Lead"),
	),
)
var educationKeyBoard = tgbotapi.NewInlineKeyboardMarkup( // // inline –º–µ–Ω—é –¥–ª—è —Å–±–æ—Ä–µ –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–°—Ä–µ–¥–Ω–µ–µ", "–°—Ä–µ–¥–Ω–µ–µ"),
		tgbotapi.NewInlineKeyboardButtonData("–ù–µ–æ–∫–æ–Ω—á–µ–Ω–Ω–æ–µ –≤—ã—Å—à–µ–µ", "–ù–µ–æ–∫–æ–Ω—á–µ–Ω–Ω–æ–µ –≤—ã—Å—à–µ–µ"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–í—ã—Å—à–µ–µ (–±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç)", "–ë–∞–∫–∞–ª–∞–≤—Ä"),
		tgbotapi.NewInlineKeyboardButtonData("–í—ã—Å—à–µ–µ (–º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞)", "–ú–∞–≥–∏—Å—Ç—Ä"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–í—ã—Å—à–µ–µ (–∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä–∞)", "–ö–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞—É–∫"),
	),
)
var answerKeyBoard = tgbotapi.NewInlineKeyboardMarkup( // inline –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–î–∞", "Yes"),
		tgbotapi.NewInlineKeyboardButtonData("–ù–µ—Ç", "No"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", "Block"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonURL("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", UserAgreement),
	),
)
var noQuestionKeyBoard = tgbotapi.NewInlineKeyboardMarkup( // // inline –º–µ–Ω—é –¥–ª—è —Å–±–æ—Ä–µ –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏—á–∏–Ω–∞—Ö –æ—Ç–∫–∞–∑–∞ –æ–±—â–∞—Ç—å—Å—è —Å –±–æ—Ç–æ–º
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–í–∞–∫–∞–Ω—Å–∏—è –Ω–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞", "–í–∞–∫–∞–Ω—Å–∏—è –Ω–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–£–∂–µ –Ω–∞—à–µ–ª —Ä–∞–±–æ—Ç—É", "–£–∂–µ –Ω–∞—à–µ–ª —Ä–∞–±–æ—Ç—É"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞", "–î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–ù–µ —Ö–æ—á—É –≥–æ–≤–æ—Ä–∏—Ç—å", "–ù–µ —Ö–æ—á—É –≥–æ–≤–æ—Ä–∏—Ç—å"),
	),
)

func DetermineId_pos(profil, position string) int {
	if profil == "Golang backend - developer" && position == "Junior" {
		return 1
	} else if profil == "ava backend - developer" && position == "Middle" {
		return 2
	} else {
		return 3
	}
}
